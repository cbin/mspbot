"use strict";
var request = require('request');
var hapi_1 = require('hapi');
var BASE_API = 'https://graph.facebook.com/v2.6';
var FACEBOOK_HUB_MODE = (function () {
    function FACEBOOK_HUB_MODE() {
    }
    FACEBOOK_HUB_MODE.SUBSCRIBE = 'subscribe';
    return FACEBOOK_HUB_MODE;
}());
var FacebookServer = (function () {
    function FacebookServer(settings, facebookBot) {
        this.settings = settings;
        this.facebookBot = facebookBot;
        this.subscribe();
        this.startWebServer();
    }
    FacebookServer.prototype.setWelcomeMessage = function (text) {
        request.post({
            url: BASE_API + "/" + this.settings.fb.page_id + "/thread_settings?access_token=" + this.settings.fb.access_token,
            body: {
                setting_type: "greeting",
                greeting: {
                    text: text
                }
            },
            json: true
        }, function (err, res, body) {
            if (err) {
                console.log('could not change fb new thread settings', JSON.stringify(err, null, 2));
                throw err;
            }
            if (res.statusCode >= 400) {
                throw new Error("Error connecting to fb " + JSON.stringify(res));
            }
            console.log('changed fb new thread settings');
        });
    };
    FacebookServer.prototype.startWebServer = function () {
        var server = new hapi_1.Server();
        server.connection({
            port: this.settings.fb.port
        });
        server.route({
            method: 'GET',
            path: this.settings.fb.callback_path,
            handler: this.verifyRequest.bind(this)
        });
        server.route({
            method: 'POST',
            path: this.settings.fb.callback_path,
            handler: this.receiveMessage.bind(this)
        });
        server.start(function (err) {
            if (err) {
                throw err;
            }
            console.log('Server running at:', server.info.uri);
        });
    };
    FacebookServer.prototype.receiveMessage = function (request, reply) {
        this.facebookBot.receiveMessage(request.payload);
        reply('OK');
    };
    FacebookServer.prototype.verifyRequest = function (request, reply) {
        var query = request.query;
        if (query['hub.mode'] === FACEBOOK_HUB_MODE.SUBSCRIBE) {
            if (query['hub.verify_token'] === this.settings.fb.verify_token) {
                return reply(query['hub.challenge']);
            }
        }
        reply('OK');
    };
    FacebookServer.prototype.subscribe = function () {
        request.post(BASE_API + "/me/subscribed_apps?access_token=" + this.settings.fb.access_token, function (err, res, body) {
            if (err) {
                console.log('could not subscribe to fb', JSON.stringify(err, null, 2));
                throw err;
            }
            if (res.statusCode >= 400) {
                throw new Error("Error connecting to fb " + JSON.stringify(res));
            }
            console.log('subscribed to fb');
        });
    };
    return FacebookServer;
}());
exports.FacebookServer = FacebookServer;
//# sourceMappingURL=server.js.map