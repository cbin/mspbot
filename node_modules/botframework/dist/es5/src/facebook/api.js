"use strict";
var request = require('request');
var Promise = require('bluebird');
var BASE_API = 'https://graph.facebook.com/v2.6';
var FacebookApi = (function () {
    function FacebookApi(settings) {
        this.settings = settings;
    }
    FacebookApi.prototype.sendMessage = function (msg) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            request.post({
                url: BASE_API + "/me/messages?access_token=" + _this.settings.fb.access_token,
                body: msg, json: true
            }, function (err, res, body) {
                if (err) {
                    console.log('facebook: could not send msg to fb', JSON.stringify(err, null, 2));
                    return reject(err);
                }
                if (res.statusCode >= 400) {
                    return reject(new Error("facebook: Error sending to fb " + JSON.stringify(res) + " " + JSON.stringify(msg)));
                }
                if (_this.settings.debug)
                    console.log("facebook: reply sent " + JSON.stringify(res));
                return resolve(res);
            });
        });
    };
    FacebookApi.prototype.getUserDetails = function (userId) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            request.get({
                url: BASE_API + "/" + userId + "?fields=first_name,last_name,profile_pic,locale,timezone,gender&access_token=" + _this.settings.fb.access_token
            }, function (err, res, body) {
                if (err) {
                    console.log('facebook: could not get user from facebook', JSON.stringify(err, null, 2));
                    reject(err);
                }
                if (res.statusCode >= 400) {
                    console.log('facebook: could not get user from facebook', JSON.stringify(body, null, 2));
                    reject(new Error("facebook: Error getting profile for user " + JSON.stringify(body) + " " + JSON.stringify(userId)));
                }
                var obj = {};
                try {
                    obj = JSON.parse(body);
                }
                catch (e) {
                    obj = body;
                }
                return resolve(obj);
            });
        });
    };
    FacebookApi.prototype.subscribe = function () {
        request.post(BASE_API + "/me/subscribed_apps?access_token=" + this.settings.fb.access_token, function (err, res, body) {
            if (err) {
                console.log('facebook: could not subscribe to fb', JSON.stringify(err, null, 2));
                throw err;
            }
            if (res.statusCode >= 400) {
                throw new Error("facebook: Error connecting to fb " + JSON.stringify(res));
            }
            console.log('facebook: subscribed to fb');
        });
    };
    return FacebookApi;
}());
exports.FacebookApi = FacebookApi;
//# sourceMappingURL=api.js.map